<UserControl  x:Class="IndustrialUnit.WpfUI.Views.EquipmentView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:validationrules="clr-namespace:IndustrialUnit.WpfUI.Validation"
              xmlns:viewModel="clr-namespace:IndustrialUnit.WpfUI.ViewModels"
              xmlns:views="clr-namespace:IndustrialUnit.WpfUI.Views"
              mc:Ignorable="d" 
              d:DesignHeight="720.623" d:DesignWidth="1260.263">

    
    <UserControl.DataContext>
    <viewModel:EquipmentViewModel/>
  </UserControl.DataContext>

  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>

          <Style x:Key="RoundButtonValidationTemplate" TargetType="Button">
            <Setter Property="Background" Value="DarkKhaki" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="1">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Olive"/>
              </Trigger>
              <DataTrigger Binding="{Binding ElementName=EqItemTypeTextBox, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqCapacityTextBox, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqPressureTextBox, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqPowerConsumptionTextBox, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqManufacturerTextBox, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqModelTextBox, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqUnitPriceTextBox, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
          
        </ResourceDictionary>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid Margin="0,0,-9,0" Background="MintCream">

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="20"/>
      <ColumnDefinition Width="140"/>
      <ColumnDefinition Width="150"/>
      <ColumnDefinition Width="30"/>
      <ColumnDefinition Width="180"/>
      <ColumnDefinition Width="680"/>
      <ColumnDefinition Width="15*"/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="50"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="50"/>
      <RowDefinition Height="20"/>
      <RowDefinition Height="40"/>
      <RowDefinition Height="40"/>
      <RowDefinition Height="40"/>
      <RowDefinition Height="100"/>
      <RowDefinition Height="15*"/>
    </Grid.RowDefinitions>
    
    <DataGrid Name="EquipmentTableGrid"  
              Grid.Column="4" 
              Grid.ColumnSpan="2" 
              Grid.Row="1" 
              Grid.RowSpan="14" 
              Margin="0,0,0,15" 
              AutoGenerateColumns="False"              
              ItemsSource="{Binding Path=Equipments, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" 
              SelectedItem="{Binding Path=SelectedEquipment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
      <DataGrid.ColumnHeaderStyle>
        <Style TargetType="{x:Type DataGridColumnHeader}">
          <Setter Property="FontWeight" Value="Bold"/>
          <Setter Property="FontSize" Value="14"/>
        </Style>
      </DataGrid.ColumnHeaderStyle>
      <DataGrid.Columns>
        <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="auto"/>
        <DataGridTextColumn Header="Item name" Binding="{Binding ItemType}" Width="auto"/>
        <DataGridTextColumn Header="Capacity (m3/min)" Binding="{Binding Capacity}" Width="auto"/>
        <DataGridTextColumn Header="Pressure (mbar)" Binding="{Binding Pressure}" Width="auto"/>
        <DataGridTextColumn Header="Power consumption (kW)" Binding="{Binding PowerConsumption}" Width="auto"/>
        <DataGridTextColumn Header="Manufacturer" Binding="{Binding Manufacturer}" Width="auto"/>
        <DataGridTextColumn Header="Model" Binding="{Binding Model}" Width="auto"/>
        <DataGridTextColumn Header="Unit Price (EUR)" Binding="{Binding UnitPrice}" Width="auto"/>
      </DataGrid.Columns>
    </DataGrid>
    
    <Label 
      Content="Equipment table"   
      Grid.Column="5" Grid.Row="0" 
      FontSize="20" Margin="0,0,5,0"/>

    <Label 
      Content="Id"
      Grid.Column="1"
      Grid.Row="1"
      VerticalContentAlignment="Center"
      HorizontalContentAlignment="Left"
      FontSize="14"/>

    <TextBox 
      Name="EqIdTextBox"
      FontSize="14"
      Margin="0,13,0,5"
      Grid.Column="2"
      Grid.Row="1"
      HorizontalContentAlignment="Left"
      VerticalContentAlignment="Center"
      IsEnabled="False"
      Foreground="Gray">
      <TextBox.Text>
        <Binding Path="SelectedEquipment.Id" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
          <Binding.ValidationRules>
            <validationrules:NumericValidationRule MinimumCharacters="0"/>
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>

    <Label 
      Content="Item Name"
      Grid.Column="1"
      Grid.Row="2"
      VerticalContentAlignment="Center"
      HorizontalContentAlignment="Left"
      FontSize="14"/>

    <TextBox 
      Name="EqItemTypeTextBox"
      FontSize="14"
      Margin="0,13,0,5"
      Grid.Column="2"
      Grid.Row="2"
      HorizontalContentAlignment="Left"
      VerticalContentAlignment="Center">
      <TextBox.Text>
        <Binding Path="SelectedEquipment.ItemType" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
          <Binding.ValidationRules>
            <validationrules:StringValidationRule MinimumCharacters="3"/>
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>

    <Label 
      Content="Capacity"
      Grid.Column="1"
      Grid.Row="3"
      VerticalContentAlignment="Center"
      HorizontalContentAlignment="Left"
      FontSize="14"/>

    <TextBox
      Name="EqCapacityTextBox"
      FontSize="14"
      Margin="0,13,0,5"
      Grid.Column="2"
      Grid.Row="3"
      HorizontalContentAlignment="Left"
      VerticalContentAlignment="Center">
      <TextBox.Text>
        <Binding Path="SelectedEquipment.Capacity" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
          <Binding.ValidationRules>
            <validationrules:NumericValidationRule MinimumCharacters="1"/>
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>

    <Label 
      Content="Pressure"          
      Grid.Column="1" 
      Grid.Row="4" 
      VerticalContentAlignment="Center" 
      HorizontalContentAlignment="Left" 
      FontSize="14"/>

    <TextBox 
      Name="EqPressureTextBox" 
      FontSize="14"
      Margin="0,13,0,5"          
      Grid.Column="2" 
      Grid.Row="4"
      HorizontalContentAlignment="Left" 
      VerticalContentAlignment="Center">
      <TextBox.Text>
        <Binding Path="SelectedEquipment.Pressure" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
          <Binding.ValidationRules>
            <validationrules:NumericValidationRule MinimumCharacters="1"/>
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>

    <Label 
      Content="Power Consumption" 
      Grid.Column="1" 
      Grid.Row="5" 
      VerticalContentAlignment="Center" 
      HorizontalContentAlignment="Left" 
      FontSize="14"/>

    <TextBox 
      Name="EqPowerConsumptionTextBox"
      FontSize="14"
      Margin="0,13,0,5"          
      Grid.Column="2" 
      Grid.Row="5"       
      HorizontalContentAlignment="Left" 
      VerticalContentAlignment="Center">
      <TextBox.Text>
        <Binding Path="SelectedEquipment.PowerConsumption" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
          <Binding.ValidationRules>
            <validationrules:NumericValidationRule MinimumCharacters="1"/>
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>

    <Label 
      Content="Manufacturer"      
      Grid.Column="1" 
      Grid.Row="6" 
      VerticalContentAlignment="Center" 
      HorizontalContentAlignment="Left" 
      FontSize="14"/>

    <TextBox 
      Name="EqManufacturerTextBox"
      FontSize="14" 
      Margin="0,13,0,5"          
      Grid.Column="2" 
      Grid.Row="6" 
      HorizontalContentAlignment="Left" 
      VerticalContentAlignment="Center">
      <TextBox.Text>
        <Binding Path="SelectedEquipment.Manufacturer" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
          <Binding.ValidationRules>
            <validationrules:StringValidationRule MinimumCharacters="3"/>
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>

    <Label 
      Content="Model"             
      Grid.Column="1" 
      Grid.Row="7" 
      VerticalContentAlignment="Center" 
      HorizontalContentAlignment="Left" 
      FontSize="14"/>

    <TextBox 
      Name="EqModelTextBox" 
      FontSize="14" 
      Margin="0,13,0,5"          
      Grid.Column="2" 
      Grid.Row="7"
      HorizontalContentAlignment="Left" 
      VerticalContentAlignment="Center">
      <TextBox.Text>
        <Binding Path="SelectedEquipment.Model" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
          <Binding.ValidationRules>
            <validationrules:StringValidationRule MinimumCharacters="3"/>
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>

    <Label 
      Content="Unit price"        
      Grid.Column="1" 
      Grid.Row="8" 
      VerticalContentAlignment="Center" 
      HorizontalContentAlignment="Left" 
      FontSize="14"/>

    <TextBox 
      Name="EqUnitPriceTextBox" 
      FontSize="14"
      Margin="0,13,0,5"          
      Grid.Column="2" 
      Grid.Row="8"
      HorizontalContentAlignment="Left" 
      VerticalContentAlignment="Center">
      <TextBox.Text>
        <Binding Path="SelectedEquipment.UnitPrice" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
          <Binding.ValidationRules>
            <validationrules:NumericValidationRule MinimumCharacters="1"/>
          </Binding.ValidationRules>
        </Binding>
      </TextBox.Text>
    </TextBox>

    <Border 
      BorderThickness="1" 
      BorderBrush="LightGray" 
      Grid.Row="13" Grid.Column="1" 
      Grid.ColumnSpan="2" Height="80" 
      Margin="0,10,0,10">
      <TextBlock 
        Text="{Binding MessageToView, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
        x:Name="LogTextBlock" 
        Background="AntiqueWhite" 
        FontWeight="Bold" 
        Padding="3"/>
    </Border>

    <Button
      Style ="{StaticResource RoundButtonTemplate}"
      Name="EQFilter" 
      Content="Filter" 
      Grid.Column="1" 
      Grid.Row="10" 
      FontSize="14" 
      FontWeight="Bold" 
      Margin="10,5,30,5"      
      Command="{Binding FilterCommand, UpdateSourceTrigger=PropertyChanged}"/>

    <Button
      Style="{StaticResource RoundButtonValidationTemplate}"
      Name="EQInsert" 
      Content="Insert" 
      Grid.Column="2" 
      Grid.Row="10" 
      FontSize="14"
      FontWeight="Bold" 
      Margin="0,5,40,5"
      Command="{Binding AddCommand}"/>

    <Button
      Style="{StaticResource RoundButtonValidationTemplate}"
      Name="EQUpdate" 
      Content="Update" 
      Grid.Column="1" 
      Grid.Row="11" 
      FontSize="14" 
      FontWeight="Bold" 
      Margin="10,5,30,5"
      Command="{Binding UpdateCommand}"/>

    <Button       
      Style ="{StaticResource RoundButtonTemplate}"
      Name="EQDelete" 
      Content="Delete" 
      Grid.Column="2" 
      Grid.Row="11" 
      FontSize="14" 
      FontWeight="Bold" 
      Margin="0,5,40,5"
      Command="{Binding DeleteCommand}"/>

    <Button 
      Style ="{StaticResource RoundButtonTemplate}"
      Name="EQRefresh" 
      Content="Refresh"
      Grid.Column="2" 
      Grid.Row="12" 
      FontSize="14" 
      FontWeight="Bold" 
      Margin="0,5,40,5"
      Command="{Binding RefreshCommand}"/>
  </Grid>
</UserControl>
