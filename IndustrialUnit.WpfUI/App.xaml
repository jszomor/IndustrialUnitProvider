<Application x:Class="IndustrialUnit.WpfUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:IndustrialUnit.WpfUI"
             xmlns:viewModel="clr-namespace:IndustrialUnit.WpfUI.ViewModels"
             StartupUri="MainWindow.xaml">
  
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>

          <Style x:Key="RoundButtonTemplate" TargetType="Button">
            <Setter Property="Background" Value="DarkKhaki" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="1">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                          <VisualTransition GeneratedDuration="0:0:0.5" />
                          <VisualTransition GeneratedDuration="0" To="Pressed" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                        </VisualState>
                        <VisualState x:Name="Pressed">
                        </VisualState>
                        <VisualState x:Name="Disabled">
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Olive"/>
              </Trigger>
            </Style.Triggers>
          </Style>
          
          <Style x:Key="RoundButtonValidationTemplate" TargetType="Button">
            <Setter Property="Background" Value="DarkKhaki" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="1">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Olive"/>
              </Trigger>
              <DataTrigger Binding="{Binding ElementName=EqItemTypeLabel, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqCapacityLabel, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqPressureLabel, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqPowerConsumptionLabel, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqManufacturerLabel, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqModelLabel, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=EqUnitPriceLabel, Path=(Validation.HasError)}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
          
          <Style TargetType="TextBox">
            <Setter Property="Padding" Value="1" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="Validation.ErrorTemplate">
              <Setter.Value>
                <ControlTemplate>
                  <StackPanel>
                    <AdornedElementPlaceholder />
                    <ItemsControl
                                            Margin="0 -9 0 0"
                                            FontSize="12"
                                            ItemsSource="{Binding}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <TextBlock Foreground="Red" Text="{Binding ErrorContent}" />
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </StackPanel>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                  <StackPanel>
                    <Border
                                            Padding="{TemplateBinding Padding}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3"
                                            Background="AntiqueWhite">
                      <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                  </StackPanel>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
          
        </ResourceDictionary>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Application.Resources>
</Application>
